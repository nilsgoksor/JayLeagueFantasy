{"version":3,"sources":["store/actions/actiontypes.js","store/actions/leagueData.js","store/actions/playerData.js","components/styledcomponents/Table.js","components/UI/Spinner/Spinner.js","containers/LeagueData.js","components/UI/StatsCard/StatsCard.js","containers/Stats.js","containers/PreviousSeasonsTable.js","components/UI/NavTabs.js","store/actions/settings.js","App.js","serviceWorker.js","shared/utility.js","store/reducers/leagueData.js","store/reducers/settings.js","store/reducers/playerData.js","axios-fantasy.js","store/sagas/leagueData.js","store/sagas/playerData.js","store/sagas/index.js","index.js"],"names":["GET_LEAGUEDATA","GET_PLAYERDATA","getLeagueDataInit","state","action","type","getLeagueDataSuccess","leagueName","standings","playerInfo","getLeagueDataFail","getPlayerDataInit","getPlayerDataSuccess","playerData","getPlayerDataFail","Table","styled","table","TableHead","thead","TableData","td","TableRow","tr","useStyles","makeStyles","theme","progress","margin","spacing","color","CircularIndeterminate","classes","CircularProgress","className","size","LeagueData","props","dispatch","useDispatch","useSelector","leagueDataReducer","loading","error","leagueId","settingsReducer","useEffect","actionTypes","actions","content","leagueTable","map","player","key","player_name","rank","entry_name","event_total","last_rank","style","total","Fragment","StatsCard","Card","CardImg","src","imgSrc","CardContent","title","stat","CardButton","onClick","onChangeHandler","div","img","button","Stats","useState","setPlayer","playerDataReducer","playerStats","leagueDataError","onGetPlayerData","useCallback","playerIds","randomPlayer","randomIndex","Math","floor","random","length","pInfo","push","id","p","find","name","previousWinners","season","PreviousSeasonsTable","previousWinnersTable","winner","index","NavTabs","currentTabValue","tabValue","AppBar","background","position","Tabs","variant","value","onChange","event","newValue","Tab","font","label","App","tabName","AppLogo","alt","display","flexDirection","justifyContent","alignItems","rotate360","keyframes","Boolean","window","location","hostname","match","updateObject","oldObject","updatedProperties","initialState","playerNames","getLeaguedataInit","getLeaguedataSuccess","getLeaguedataFail","reducer","setTabVal","pastSeason","totalPoints","pointsOnBench","mostPointsPastSeason","leastPointsPastSeason","Number","MAX_SAFE_INTEGER","bestPastSeason","worstPastSeason","mostPOB","leastPOB","mostPointsOnBench","leastPointsOnBench","mt","lt","mostTransfers","leastTransfers","data","season_name","total_points","totalTransfers","parseInt","instance","axios","create","baseURL","leagueDataSaga","put","url","config","headers","Accept","ContentType","get","response","league","results","entry","playerDataSaga","playerId","pastSeasons","past","thisSeason","current","gameweek","event_transfers","points_on_bench","watchLeagueData","watchPlayerData","takeLatest","takeEvery","rootRedcuer","combineReducers","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","funk","run","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28ac75b2.chunk.js","sourcesContent":["export const SET_TAB_VAL = \"SET_TAB_VAL\";\n\nexport const GET_LEAGUEDATA = \"GET_LEAGUEDATA\";\nexport const GET_LEAGUEDATA_INIT = \"GET_LEAGUEDATA_INIT\";\nexport const GET_LEAGUEDATA_SUCCESS = \"GET_LEAGUEDATA_SUCCESS\";\nexport const GET_LEAGUEDATA_FAIL = \"GET_LEAGUEDATA_FAIL\";\n\nexport const GET_PLAYERDATA = \"GET_PLAYERDATA\";\nexport const GET_PLAYERDATA_INIT = \"GET_PLAYERDATA_INIT\";\nexport const GET_PLAYERDATA_SUCCESS = \"GET_PLAYERDATA_SUCCESS\";\nexport const GET_PLAYERDATA_FAIL = \"GET_PLAYERDATA_FAIL\";\n","import * as actionTypes from \"./actiontypes\";\n\nexport const getLeagueData = leagueId => {\n  return { type: actionTypes.GET_LEAGUEDATA, leagueId: leagueId };\n};\n\nexport const getLeagueDataInit = (state, action) => {\n  return { type: actionTypes.GET_LEAGUEDATA_INIT };\n};\n\nexport const getLeagueDataSuccess = (leagueName, standings, playerInfo) => {\n  return {\n    type: actionTypes.GET_LEAGUEDATA_SUCCESS,\n    leagueName: leagueName,\n    standings: standings,\n    playerInfo: playerInfo\n  };\n};\nexport const getLeagueDataFail = (state, action) => {\n  return { type: actionTypes.GET_LEAGUEDATA_FAIL };\n};\n","import * as actionTypes from \"./actiontypes\";\n\nexport const getPlayerData = playerIds => {\n  return { type: actionTypes.GET_PLAYERDATA, playerIds: playerIds };\n};\n\nexport const getPlayerDataInit = action => {\n  return { type: actionTypes.GET_PLAYERDATA_INIT };\n};\n\nexport const getPlayerDataSuccess = playerData => {\n  return {\n    type: actionTypes.GET_PLAYERDATA_SUCCESS,\n    playerData: playerData\n  };\n};\nexport const getPlayerDataFail = action => {\n  return { type: actionTypes.GET_PLAYERDATA_FAIL };\n};\n","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n  width: 75%;\n  max-width: 700px;\n  margin: auto;\n  text-align: center;\n  border-spacing: 0;\n  border: 1px solid #000000;\n  font-size: 14px;\n`;\nexport const TableHead = styled.thead`\n  font-weight: bold;\n  font-size: 20px;\n`;\n\nexport const TableData = styled.td`\n  padding: 1px;\n  height: 40px;\n  border: 0.3px solid #f9cdda;\n`;\nexport const TableRow = styled.tr`\n  background-color: #000000;\n  color: #ffffff;\n  &:hover {\n    background-color: #fbec49;\n    color: #000000;\n  }\n`;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n    color: \"#000000\"\n  }\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <CircularProgress className={classes.progress} size={80} />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport TrendingDown from \"@material-ui/icons/TrendingDown\";\nimport TrendingUp from \"@material-ui/icons/TrendingUp\";\nimport TrendingStale from \"@material-ui/icons/Remove\";\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableData\n} from \"../components/styledcomponents/Table\";\n\nimport Spinner from \"../components/UI/Spinner/Spinner\";\n\nconst LeagueData = props => {\n  const dispatch = useDispatch();\n\n  const standings = useSelector(state => {\n    return state.leagueDataReducer.standings;\n  });\n\n  const loading = useSelector(state => {\n    return state.leagueDataReducer.loading;\n  });\n\n  const error = useSelector(state => {\n    return state.leagueDataReducer.error;\n  });\n  const leagueId = useSelector(state => {\n    return state.settingsReducer.leagueId;\n  });\n\n  useEffect(() => {\n    dispatch(actions.getLeagueData(leagueId));\n  }, [leagueId, dispatch]);\n\n  let content = error ? <h3>access to the fpl api denied</h3> : <Spinner />;\n\n  if (!loading && !error) {\n    const leagueTable = standings.map(player => {\n      return (\n        <TableRow key={player.player_name}>\n          <TableData>{player.rank}</TableData>\n          <TableData>{player.player_name}</TableData>\n          <TableData>{player.entry_name}</TableData>\n          <TableData>{player.event_total}</TableData>\n          <TableData>\n            {player.rank - player.last_rank === 0 ? (\n              <TrendingStale></TrendingStale>\n            ) : player.rank - player.last_rank < 0 ? (\n              <TrendingUp style={{ color: \"green\" }}></TrendingUp>\n            ) : (\n              <TrendingDown style={{ color: \"red\" }}></TrendingDown>\n            )}\n          </TableData>\n          <TableData>{player.total}</TableData>\n        </TableRow>\n      );\n    });\n\n    content = (\n      <React.Fragment>\n        <React.Fragment>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableData>Rank</TableData>\n                <TableData>Name</TableData>\n                <TableData>Team</TableData>\n                <TableData>GW points</TableData>\n                <TableData>Form</TableData>\n                <TableData>Total points</TableData>\n              </TableRow>\n            </TableHead>\n            <tbody>{leagueTable}</tbody>\n          </Table>\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n  return content;\n};\n\nexport default LeagueData;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StatsCard = props => {\n  return (\n    <Card>\n      <CardImg src={props.imgSrc}></CardImg>\n      <CardContent>\n        <h4>{props.title}</h4>\n        <p>\n          {props.player} - {props.stat}\n        </p>\n      </CardContent>\n      <CardButton onClick={props.onChangeHandler}>new stat</CardButton>\n    </Card>\n  );\n};\n\nexport default StatsCard;\n\nconst Card = styled.div`\n  width: 500px;\n  height: 450px;\n  text-align: center;\n  border-radius: 5px;\n\n  background: #4b8cca;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.5);\n  transition: 0.3s;\n\n  &:hover {\n    background: #4b8cca;\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.5);\n  }\n\n  @media (max-width: 768px) {\n    width: 325px;\n    height: 350px;\n  }\n`;\nconst CardImg = styled.img`\n  width: 100%;\n  border-radius: 5px 5px 0px 0px;\n  opacity: 0.8;\n`;\nconst CardContent = styled.div`\n  padding: 5px;\n`;\nconst CardButton = styled.button`\n  background: #f9cdda;\n  height: 40px;\n  width: 100px;\n  border-radius: 5px;\n\n  &:hover {\n    background: #efa948;\n    color: #ffffff;\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.5);\n    cursor: pointer;\n  }\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport Spinner from \"../components/UI/Spinner/Spinner\";\nimport StatsCard from \"../components/UI/StatsCard/StatsCard\";\n\nconst Stats = props => {\n  const dispatch = useDispatch();\n\n  const [player, setPlayer] = useState(\"\");\n\n  const { error, loading, playerStats } = useSelector(state => {\n    return state.playerDataReducer;\n  });\n  let { leagueDataError } = useSelector(state => {\n    return state.leagueDataReducer.error;\n  });\n  const playerInfo = useSelector(state => {\n    return state.leagueDataReducer.playerInfo;\n  });\n\n  const onGetPlayerData = useCallback(\n    playerIds => {\n      dispatch(actions.getPlayerData(playerIds));\n    },\n    [dispatch]\n  );\n\n  const randomPlayer = useCallback(() => {\n    const randomIndex = Math.floor(\n      Math.random() * Math.floor(playerStats.length)\n    );\n    setPlayer(randomIndex);\n  }, [playerStats]);\n\n  useEffect(() => {\n    if (player === \"\" && playerStats) {\n      randomPlayer();\n    }\n  }, [randomPlayer, player, playerStats]);\n\n  useEffect(() => {\n    let playerIds = [];\n    if (playerInfo) {\n      playerInfo.map(pInfo => {\n        return playerIds.push(pInfo.id);\n      });\n    }\n\n    onGetPlayerData(playerIds);\n  }, [onGetPlayerData, playerInfo]);\n\n  if (\n    playerStats[player] &&\n    !loading &&\n    !error &&\n    !leagueDataError &&\n    playerInfo\n  ) {\n    const p = playerInfo.find(p => p.id === playerStats[player].player);\n    const name = p ? p.name : \"unknown player\";\n    return (\n      <StatsCard\n        title={playerStats[player].title}\n        player={name}\n        stat={playerStats[player].stat}\n        imgSrc={playerStats[player].imgSrc}\n        onChangeHandler={() => randomPlayer()}\n      ></StatsCard>\n    );\n  } else {\n    return loading ? <Spinner /> : <h3>access to the fpl api denied</h3>;\n  }\n};\n\nexport default Stats;\n","import React from \"react\";\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableData\n} from \"../components/styledcomponents/Table\";\n\nconst previousWinners = [\n  { season: \"2018/2019\", name: \"David Tran\" },\n  { season: \"2019/2020\", name: \"???\" }\n];\n\nconst PreviousSeasonsTable = props => {\n  const previousWinnersTable = previousWinners.map((winner, index) => {\n    return (\n      <TableRow key={index}>\n        <TableData key={winner.season + index}>{winner.season}</TableData>\n        <TableData key={winner.name + index}>{winner.name}</TableData>\n      </TableRow>\n    );\n  });\n  return (\n    <React.Fragment>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableData>Season</TableData>\n            <TableData>Winner</TableData>\n          </TableRow>\n        </TableHead>\n        <tbody>{previousWinnersTable}</tbody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default PreviousSeasonsTable;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nconst NavTabs = props => {\n  const dispatch = useDispatch();\n  const currentTabValue = useSelector(state => {\n    return state.settingsReducer.tabValue;\n  });\n\n  const handleChange = (event, newValue) => {\n    dispatch(actions.setTabVal(newValue));\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar style={{ background: \"#f9cdda\" }} position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={currentTabValue}\n          onChange={handleChange}\n        >\n          <Tab\n            style={{ color: \"#000000\", font: \"FF Bauer Grotesk Pro Regular\" }}\n            label=\"Current table\"\n          />\n          <Tab\n            style={{ color: \"#000000\", font: \"FF Bauer Grotesk Pro Regular\" }}\n            label=\"Stats\"\n          />\n          <Tab\n            style={{ color: \"#000000\", font: \"FF Bauer Grotesk Pro Regular\" }}\n            label=\"Previous seasons\"\n          />\n        </Tabs>\n      </AppBar>\n    </React.Fragment>\n  );\n};\nexport default NavTabs;\n","import * as actionTypes from \"./actiontypes\";\n\nexport const setTabVal = tabValue => {\n  return { type: actionTypes.SET_TAB_VAL, value: tabValue };\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport LeagueData from \"./containers/LeagueData\";\nimport Stats from \"./containers/Stats\";\nimport PreviousSeasonsTable from \"./containers/PreviousSeasonsTable\";\nimport NavTabs from \"./components/UI/NavTabs\";\n\nconst App = () => {\n  const currentTabValue = useSelector(state => {\n    return state.settingsReducer.tabValue;\n  });\n  const leagueName = useSelector(state => {\n    return state.leagueDataReducer.leagueName;\n  });\n\n  let content = null;\n  let tabName = \"\";\n  if (currentTabValue === 0) {\n    content = <LeagueData />;\n    tabName = \"current table\";\n  }\n  if (currentTabValue === 1) {\n    content = <Stats />;\n    tabName = \"some league stats\";\n  }\n  if (currentTabValue === 2) {\n    content = <PreviousSeasonsTable />;\n    tabName = \"previous season winners\";\n  }\n\n  return (\n    <React.Fragment>\n      <NavTabs></NavTabs>\n      <React.Fragment>\n        <h1>{leagueName}</h1>\n        <AppLogo src={process.env.PUBLIC_URL + \"/logo.jpg\"} alt=\"logo\" />\n        <h1>{tabName}</h1>\n      </React.Fragment>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        {content}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }`;\nconst AppLogo = styled.img`\n  animation: ${rotate360} infinite 60s linear;\n  height: 80px;\n  width: 80px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  &:hover {\n    animation: ${rotate360} infinite 1.5s linear;\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actiontypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  leagueName: \"JayLeague\",\n  standings: [],\n  playerNames: [],\n  error: false,\n  loading: true\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_LEAGUEDATA_INIT:\n      return getLeaguedataInit(state, action);\n    case actionTypes.GET_LEAGUEDATA_SUCCESS:\n      return getLeaguedataSuccess(state, action);\n    case actionTypes.GET_LEAGUEDATA_FAIL:\n      return getLeaguedataFail(state, action);\n    default:\n      return state;\n  }\n};\n\nconst getLeaguedataInit = state => {\n  return updateObject(state, { loading: true, error: false });\n};\n\nconst getLeaguedataSuccess = (state, action) => {\n  return updateObject(state, {\n    error: false,\n    loading: false,\n    leagueName: action.leagueName,\n    standings: action.standings,\n    playerInfo: action.playerInfo\n  });\n};\n\nconst getLeaguedataFail = state => {\n  return updateObject(state, { error: true, loading: false });\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actiontypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = { leagueId: \"848627\", tabValue: 0 };\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TAB_VAL:\n      return setTabVal(state, action);\n    default:\n      return state;\n  }\n};\nconst setTabVal = (state, action) => {\n  return updateObject(state, { tabValue: action.value });\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actiontypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  loading: false,\n  error: false,\n  id: null,\n  playerData: [\n    {\n      id: null,\n      pastSeason: { season: \"\", totalPoints: \"\", rank: \"\" },\n      pointsOnBench: 0\n    }\n  ],\n  playerStats: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_PLAYERDATA_INIT:\n      return getPlayerDataInit(state, action);\n    case actionTypes.GET_PLAYERDATA_SUCCESS:\n      return getPlayerDataSuccess(state, action);\n    case actionTypes.GET_PLAYERDATA_FAIL:\n      return getPlayerDataFail(state, action);\n    default:\n      return state;\n  }\n};\n\nconst getPlayerDataInit = state => {\n  return updateObject(state, { loading: true, error: false });\n};\n\nconst getPlayerDataSuccess = (state, action) => {\n  let playerData = [];\n  let playerStats = [];\n\n  let mostPointsPastSeason = 0;\n  let leastPointsPastSeason = Number.MAX_SAFE_INTEGER;\n  let bestPastSeason = {};\n  let worstPastSeason = {};\n\n  let mostPOB = 0;\n  let leastPOB = Number.MAX_SAFE_INTEGER;\n  let mostPointsOnBench = {};\n  let leastPointsOnBench = {};\n\n  let mt = 0;\n  let lt = Number.MAX_SAFE_INTEGER;\n  let mostTransfers = {};\n  let leastTransfers = {};\n\n  action.playerData.map(player => {\n    const data = {\n      id: player.id,\n      pastSeason: {\n        season: player.pastSeason.season_name,\n        stat: player.pastSeason.total_points,\n        rank: player.pastSeason.rank\n      },\n      pointsOnBench: player.pointsOnBench,\n      totalTransfers: player.totalTransfers\n    };\n\n    if (parseInt(player.pastSeason.total_points) > mostPointsPastSeason) {\n      bestPastSeason = {\n        title: \"Best past season\",\n        player: player.id,\n        stat: player.pastSeason.total_points + \" points\",\n        imgSrc:\n          \"https://4.bp.blogspot.com/-1BKX0V67lzM/W_7PdNJsWWI/AAAAAAAADEc/CChu_4np3HYsZ0xcW9kY39ChfVRC1MqZACLcBGAs/s1600/mohamed-salah-liverpool-2018-19_12clx3rbzczgc13sgxgwwlqqek.jpg\"\n      };\n      mostPointsPastSeason = player.pastSeason.total_points;\n    }\n    if (parseInt(player.pastSeason.total_points) < leastPointsPastSeason) {\n      worstPastSeason = {\n        title: \"Worst past season\",\n        player: player.id,\n        stat: player.pastSeason.total_points + \" points\",\n        imgSrc:\n          \"https://images.wallpaperscraft.com/image/mesut_ozil_arsenal_footballer_99163_1600x900.jpg\"\n      };\n      leastPointsPastSeason = player.pastSeason.total_points;\n    }\n\n    if (player.pointsOnBench > mostPOB) {\n      mostPointsOnBench = {\n        title: \"Most points on the bench\",\n        player: player.id,\n        stat: player.pointsOnBench + \" points\",\n        imgSrc:\n          \"https://e0.365dm.com/18/04/1600x900/skysports-pep-guardiola-manchester-city_4276601.jpg\"\n      };\n      mostPOB = player.pointsOnBench;\n    }\n\n    if (player.pointsOnBench <= leastPOB) {\n      leastPointsOnBench = {\n        title: \"Least points on the bench\",\n        player: player.id,\n        stat: player.pointsOnBench + \" points\",\n        imgSrc:\n          \"https://i.eurosport.com/2015/09/30/1701815-36034723-2560-1440.jpg?w=700\"\n      };\n      leastPOB = player.pointsOnBench;\n    }\n\n    if (player.totalTransfers <= lt) {\n      leastTransfers = {\n        title: \"Least transfers\",\n        player: player.id,\n        stat: player.totalTransfers + \" transfers\",\n        imgSrc:\n          \"https://e0.365dm.com/18/09/1600x900/skysports-jurgen-klopp-liverpool_4426129.jpg\"\n      };\n      lt = player.totalTransfers;\n    }\n    if (player.totalTransfers > mt) {\n      mostTransfers = {\n        title: \"Most transfers\",\n        player: player.id,\n        stat: player.totalTransfers + \" transfers\",\n        imgSrc:\n          \"https://3.bp.blogspot.com/-AlMgEIgh__A/XJ0C02XmceI/AAAAAAAANsI/CwGw0BXDPNg815vXnj84-la5--y6OF8jwCLcBGAs/s1600/ole-gunnar-solskjaer-manchester-united-2018-19_ybx9u7ieixb51lbcyhghgz199.jpg\"\n      };\n      mt = player.totalTransfers;\n    }\n    playerData.push(data);\n    return data;\n  });\n\n  playerStats.push(bestPastSeason);\n  playerStats.push(worstPastSeason);\n  playerStats.push(mostPointsOnBench);\n  playerStats.push(leastPointsOnBench);\n  playerStats.push(mostTransfers);\n  playerStats.push(leastTransfers);\n\n  return updateObject(state, {\n    loading: false,\n    error: false,\n    playerData: playerData,\n    playerStats: playerStats\n  });\n};\n\nconst getPlayerDataFail = state => {\n  return updateObject(state, { loading: false, error: true });\n};\n\nexport default reducer;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL:\n    \"https://cors-anywhere.herokuapp.com/https://fantasy.premierleague.com\"\n});\n\nexport default instance;\n","import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios-fantasy\";\n\nexport function* leagueDataSaga(action) {\n  yield put(actions.getLeagueDataInit());\n  const url = \"/api/leagues-classic/\" + action.leagueId + \"/standings/\";\n  const config = {\n    headers: {\n      Accept: \"application/json\",\n      ContentType: \"application/json\"\n    }\n  };\n  try {\n    const response = yield axios.get(url, config);\n    const leagueName = response.data.league.name;\n    const standings = response.data.standings.results;\n    const playerInfo = yield standings.map(player => {\n      return { id: player.entry, name: player.player_name };\n    });\n    yield put(actions.getLeagueDataSuccess(leagueName, standings, playerInfo));\n  } catch (error) {\n    yield put(actions.getLeagueDataFail(error));\n  }\n}\n","import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios-fantasy\";\n\nexport function* playerDataSaga(action) {\n  yield put(actions.getPlayerDataInit());\n\n  let playerData = [];\n  for (const playerId of action.playerIds) {\n    const url = \"/api/entry/\" + playerId + \"/history/\";\n    try {\n      const response = yield axios.get(url);\n\n      const pastSeasons = response.data.past;\n      let pastSeason = pastSeasons[pastSeasons.length - 1];\n      if (!pastSeason) {\n        pastSeason = { season_name: \"N/A\", total_points: \"N/A\", rank: \"N/A\" };\n      }\n\n      const thisSeason = response.data.current;\n      let pointsOnBench = 0;\n      let totalTransfers = 0;\n      thisSeason.map(gameweek => {\n        totalTransfers += gameweek.event_transfers;\n        pointsOnBench += gameweek.points_on_bench;\n        return true;\n      });\n\n      playerData.push({\n        id: playerId,\n        pastSeason: pastSeason,\n        pointsOnBench: pointsOnBench,\n        totalTransfers: totalTransfers\n      });\n    } catch (error) {\n      yield put(actions.getPlayerDataFail(error));\n    }\n  }\n  yield put(actions.getPlayerDataSuccess(playerData));\n}\n","import { takeLatest, takeEvery } from \"redux-saga/effects\";\nimport { leagueDataSaga } from \"./leagueData\";\nimport { playerDataSaga } from \"./playerData\";\nimport * as actionTypes from \"../actions/actiontypes\";\n\nexport function* watchLeagueData() {\n  yield takeLatest(actionTypes.GET_LEAGUEDATA, leagueDataSaga);\n}\n\nexport function* watchPlayerData() {\n  yield takeEvery(actionTypes.GET_PLAYERDATA, playerDataSaga);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"typeface-roboto\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, combineReducers, applyMiddleware } from \"redux\";\nimport leagueDataReducer from \"./store/reducers/leagueData\";\nimport settingsReducer from \"./store/reducers/settings\";\nimport playerDataReducer from \"./store/reducers/playerData\";\nimport funk from \"redux-thunk\";\n\n//redux saga\nimport createSagaMiddleware from \"redux-saga\";\nimport { watchLeagueData, watchPlayerData } from \"./store/sagas\";\n\nconst rootRedcuer = combineReducers({\n  leagueDataReducer: leagueDataReducer,\n  settingsReducer: settingsReducer,\n  playerDataReducer: playerDataReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootRedcuer,\n  composeEnhancers(applyMiddleware(funk, sagaMiddleware))\n);\n\nsagaMiddleware.run(watchLeagueData);\nsagaMiddleware.run(watchPlayerData);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}