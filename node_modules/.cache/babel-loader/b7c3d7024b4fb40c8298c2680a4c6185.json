{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios-fantasy\";\nexport function* leagueDataSaga(action) {\n  yield put(actions.getLeagueDataInit());\n  const url = \"/api/leagues-classic/\" + action.leagueId + \"/standings/\";\n  const config = {\n    headers: {\n      \"Cache-Control\": \"no-cache\",\n      \"content-type\": \"application/vnd.api+json\",\n      \"x-api-key\": \"9xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx9\"\n    }\n  };\n\n  try {\n    const response = yield axios.get(url, config);\n    const leagueName = response.data.league.name;\n    const standings = response.data.standings.results;\n    const playerInfo = yield standings.map(player => {\n      return {\n        id: player.entry,\n        name: player.player_name\n      };\n    });\n    yield put(actions.getLeagueDataSuccess(leagueName, standings, playerInfo));\n  } catch (error) {\n    yield put(actions.getLeagueDataFail(error));\n  }\n}","map":{"version":3,"sources":["/Users/nilsgoksor/Documents/Programming/React/JayLeagueFantasy/src/store/sagas/leagueData.js"],"names":["put","actions","axios","leagueDataSaga","action","getLeagueDataInit","url","leagueId","config","headers","response","get","leagueName","data","league","name","standings","results","playerInfo","map","player","id","entry","player_name","getLeagueDataSuccess","error","getLeagueDataFail"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AACtC,QAAMJ,GAAG,CAACC,OAAO,CAACI,iBAAR,EAAD,CAAT;AACA,QAAMC,GAAG,GAAG,0BAA0BF,MAAM,CAACG,QAAjC,GAA4C,aAAxD;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,uBAAiB,UADV;AAEP,sBAAgB,0BAFT;AAGP,mBAAa;AAHN;AADI,GAAf;;AAOA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUL,GAAV,EAAeE,MAAf,CAAvB;AACA,UAAMI,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBC,IAAxC;AACA,UAAMC,SAAS,GAAGN,QAAQ,CAACG,IAAT,CAAcG,SAAd,CAAwBC,OAA1C;AACA,UAAMC,UAAU,GAAG,MAAMF,SAAS,CAACG,GAAV,CAAcC,MAAM,IAAI;AAC/C,aAAO;AAAEC,QAAAA,EAAE,EAAED,MAAM,CAACE,KAAb;AAAoBP,QAAAA,IAAI,EAAEK,MAAM,CAACG;AAAjC,OAAP;AACD,KAFwB,CAAzB;AAGA,UAAMvB,GAAG,CAACC,OAAO,CAACuB,oBAAR,CAA6BZ,UAA7B,EAAyCI,SAAzC,EAAoDE,UAApD,CAAD,CAAT;AACD,GARD,CAQE,OAAOO,KAAP,EAAc;AACd,UAAMzB,GAAG,CAACC,OAAO,CAACyB,iBAAR,CAA0BD,KAA1B,CAAD,CAAT;AACD;AACF","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios-fantasy\";\n\nexport function* leagueDataSaga(action) {\n  yield put(actions.getLeagueDataInit());\n  const url = \"/api/leagues-classic/\" + action.leagueId + \"/standings/\";\n  const config = {\n    headers: {\n      \"Cache-Control\": \"no-cache\",\n      \"content-type\": \"application/vnd.api+json\",\n      \"x-api-key\": \"9xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx9\"\n    }\n  };\n  try {\n    const response = yield axios.get(url, config);\n    const leagueName = response.data.league.name;\n    const standings = response.data.standings.results;\n    const playerInfo = yield standings.map(player => {\n      return { id: player.entry, name: player.player_name };\n    });\n    yield put(actions.getLeagueDataSuccess(leagueName, standings, playerInfo));\n  } catch (error) {\n    yield put(actions.getLeagueDataFail(error));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}