{"ast":null,"code":"import * as actionTypes from \"../actions/actiontypes\";\nimport { updateObject } from \"../../shared/utility\";\nconst initialState = {\n  loading: false,\n  error: false,\n  id: null,\n  playerData: [{\n    id: null,\n    pastSeason: {\n      season: \"\",\n      totalPoints: \"\",\n      rank: \"\"\n    },\n    pointsOnBench: 0\n  }],\n  playerStats: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_PLAYERDATA_INIT:\n      return getPlayerDataInit(state, action);\n\n    case actionTypes.GET_PLAYERDATA_SUCCESS:\n      return getPlayerDataSuccess(state, action);\n\n    case actionTypes.GET_PLAYERDATA_FAIL:\n      return getPlayerDataFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nconst getPlayerDataInit = state => {\n  return updateObject(state, {\n    loading: true,\n    error: false\n  });\n};\n\nconst getPlayerDataSuccess = (state, action) => {\n  let playerData = [];\n  let playerStats = [];\n  let mostPointsPastSeason = 0;\n  let leastPointsPastSeason = Number.MAX_SAFE_INTEGER;\n  let bestPastSeason = {};\n  let worstPastSeason = {};\n  let mostPOB = 0;\n  let leastPOB = Number.MAX_SAFE_INTEGER;\n  let mostPointsOnBench = {};\n  let leastPointsOnBench = {};\n  let mt = 0;\n  let lt = Number.MAX_SAFE_INTEGER;\n  let mostTransfers = {};\n  let leastTransfers = {};\n  playerData.map(player => {\n    const data = {\n      id: player.id,\n      pastSeason: {\n        season: player.pastSeason.season_name,\n        stat: player.pastSeason.total_points,\n        rank: player.pastSeason.rank\n      },\n      pointsOnBench: player.pointsOnBench\n    };\n\n    if (parseInt(player.pastSeason.total_points) > mostPointsPastSeason) {\n      bestPastSeason = {\n        title: \"Best past season\",\n        player: player.id,\n        stat: player.pastSeason.total_points + \" points\",\n        imgSrc: \"https://4.bp.blogspot.com/-1BKX0V67lzM/W_7PdNJsWWI/AAAAAAAADEc/CChu_4np3HYsZ0xcW9kY39ChfVRC1MqZACLcBGAs/s1600/mohamed-salah-liverpool-2018-19_12clx3rbzczgc13sgxgwwlqqek.jpg\"\n      };\n      mostPointsPastSeason = player.pastSeason.total_points;\n    }\n\n    if (parseInt(player.pastSeason.total_points) < leastPointsPastSeason) {\n      worstPastSeason = {\n        title: \"Worst past season\",\n        player: player.id,\n        stat: player.pastSeason.total_points + \" points\",\n        imgSrc: \"http://1.bp.blogspot.com/-N3ieX10np_w/UoFZUHeJDXI/AAAAAAAAC1o/OIGWu70lzXw/s1600/philjonesnightmare.jpg\"\n      };\n      leastPointsPastSeason = player.pastSeason.total_points;\n    }\n\n    if (player.pointsOnBench > mostPOB) {\n      mostPointsOnBench = {\n        title: \"Most points on the bench\",\n        player: player.id,\n        stat: player.pointsOnBench + \" points\",\n        imgSrc: \"https://e0.365dm.com/18/04/1600x900/skysports-pep-guardiola-manchester-city_4276601.jpg\"\n      };\n      mostPOB = player.pointsOnBench;\n    }\n\n    if (player.pointsOnBench <= leastPOB) {\n      leastPointsOnBench = {\n        title: \"Least points on the bench\",\n        player: player.id,\n        stat: player.pointsOnBench + \" points\",\n        imgSrc: \"https://i.eurosport.com/2015/09/30/1701815-36034723-2560-1440.jpg?w=700\"\n      };\n      leastPOB = player.pointsOnBench;\n    }\n\n    if (player.totalTransfers <= lt) {\n      leastPointsOnBench = {\n        title: \"Least transfers\",\n        player: player.id,\n        stat: player.totalTransfers + \" transfers\",\n        imgSrc: \"https://i.eurosport.com/2015/09/30/1701815-36034723-2560-1440.jpg?w=700\"\n      };\n      lt = player.totalTransfers;\n    }\n\n    playerData.push(data);\n    return data;\n  });\n  playerStats.push(bestPastSeason);\n  playerStats.push(worstPastSeason);\n  playerStats.push(mostPointsOnBench);\n  playerStats.push(leastPointsOnBench);\n  return updateObject(state, {\n    loading: false,\n    error: false,\n    playerData: playerData,\n    playerStats: playerStats\n  });\n};\n\nconst getPlayerDataFail = state => {\n  return updateObject(state, {\n    loading: false,\n    error: true\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nilsgoksor/Documents/Programming/React/JayLeagueFantasy/src/store/reducers/playerData.js"],"names":["actionTypes","updateObject","initialState","loading","error","id","playerData","pastSeason","season","totalPoints","rank","pointsOnBench","playerStats","reducer","state","action","type","GET_PLAYERDATA_INIT","getPlayerDataInit","GET_PLAYERDATA_SUCCESS","getPlayerDataSuccess","GET_PLAYERDATA_FAIL","getPlayerDataFail","mostPointsPastSeason","leastPointsPastSeason","Number","MAX_SAFE_INTEGER","bestPastSeason","worstPastSeason","mostPOB","leastPOB","mostPointsOnBench","leastPointsOnBench","mt","lt","mostTransfers","leastTransfers","map","player","data","season_name","stat","total_points","parseInt","title","imgSrc","totalTransfers","push"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actiontypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  loading: false,\n  error: false,\n  id: null,\n  playerData: [\n    {\n      id: null,\n      pastSeason: { season: \"\", totalPoints: \"\", rank: \"\" },\n      pointsOnBench: 0\n    }\n  ],\n  playerStats: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_PLAYERDATA_INIT:\n      return getPlayerDataInit(state, action);\n    case actionTypes.GET_PLAYERDATA_SUCCESS:\n      return getPlayerDataSuccess(state, action);\n    case actionTypes.GET_PLAYERDATA_FAIL:\n      return getPlayerDataFail(state, action);\n    default:\n      return state;\n  }\n};\n\nconst getPlayerDataInit = state => {\n  return updateObject(state, { loading: true, error: false });\n};\n\nconst getPlayerDataSuccess = (state, action) => {\n  let playerData = [];\n  let playerStats = [];\n\n  let mostPointsPastSeason = 0;\n  let leastPointsPastSeason = Number.MAX_SAFE_INTEGER;\n  let bestPastSeason = {};\n  let worstPastSeason = {};\n\n  let mostPOB = 0;\n  let leastPOB = Number.MAX_SAFE_INTEGER;\n  let mostPointsOnBench = {};\n  let leastPointsOnBench = {};\n\n  let mt = 0;\n  let lt = Number.MAX_SAFE_INTEGER;\n  let mostTransfers = {};\n  let leastTransfers = {};\n\n  playerData.map(player => {\n    const data = {\n      id: player.id,\n      pastSeason: {\n        season: player.pastSeason.season_name,\n        stat: player.pastSeason.total_points,\n        rank: player.pastSeason.rank\n      },\n      pointsOnBench: player.pointsOnBench\n    };\n\n    if (parseInt(player.pastSeason.total_points) > mostPointsPastSeason) {\n      bestPastSeason = {\n        title: \"Best past season\",\n        player: player.id,\n        stat: player.pastSeason.total_points + \" points\",\n        imgSrc:\n          \"https://4.bp.blogspot.com/-1BKX0V67lzM/W_7PdNJsWWI/AAAAAAAADEc/CChu_4np3HYsZ0xcW9kY39ChfVRC1MqZACLcBGAs/s1600/mohamed-salah-liverpool-2018-19_12clx3rbzczgc13sgxgwwlqqek.jpg\"\n      };\n      mostPointsPastSeason = player.pastSeason.total_points;\n    }\n    if (parseInt(player.pastSeason.total_points) < leastPointsPastSeason) {\n      worstPastSeason = {\n        title: \"Worst past season\",\n        player: player.id,\n        stat: player.pastSeason.total_points + \" points\",\n        imgSrc:\n          \"http://1.bp.blogspot.com/-N3ieX10np_w/UoFZUHeJDXI/AAAAAAAAC1o/OIGWu70lzXw/s1600/philjonesnightmare.jpg\"\n      };\n      leastPointsPastSeason = player.pastSeason.total_points;\n    }\n\n    if (player.pointsOnBench > mostPOB) {\n      mostPointsOnBench = {\n        title: \"Most points on the bench\",\n        player: player.id,\n        stat: player.pointsOnBench + \" points\",\n        imgSrc:\n          \"https://e0.365dm.com/18/04/1600x900/skysports-pep-guardiola-manchester-city_4276601.jpg\"\n      };\n      mostPOB = player.pointsOnBench;\n    }\n\n    if (player.pointsOnBench <= leastPOB) {\n      leastPointsOnBench = {\n        title: \"Least points on the bench\",\n        player: player.id,\n        stat: player.pointsOnBench + \" points\",\n        imgSrc:\n          \"https://i.eurosport.com/2015/09/30/1701815-36034723-2560-1440.jpg?w=700\"\n      };\n      leastPOB = player.pointsOnBench;\n    }\n\n    if (player.totalTransfers <= lt) {\n      leastPointsOnBench = {\n        title: \"Least transfers\",\n        player: player.id,\n        stat: player.totalTransfers + \" transfers\",\n        imgSrc:\n          \"https://i.eurosport.com/2015/09/30/1701815-36034723-2560-1440.jpg?w=700\"\n      };\n      lt = player.totalTransfers;\n    }\n\n    playerData.push(data);\n    return data;\n  });\n  playerStats.push(bestPastSeason);\n  playerStats.push(worstPastSeason);\n  playerStats.push(mostPointsOnBench);\n  playerStats.push(leastPointsOnBench);\n\n  return updateObject(state, {\n    loading: false,\n    error: false,\n    playerData: playerData,\n    playerStats: playerStats\n  });\n};\n\nconst getPlayerDataFail = state => {\n  return updateObject(state, { loading: false, error: true });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}