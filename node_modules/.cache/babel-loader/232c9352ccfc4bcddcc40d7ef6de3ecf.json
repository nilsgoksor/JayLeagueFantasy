{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios-fantasy\";\nexport function* playerDataSaga(action) {\n  yield put(actions.getPlayerDataInit());\n  let playerData = [];\n\n  for (const playerId of action.playerIds) {\n    const url = \"/api/entry/\" + playerId + \"/history/\";\n\n    try {\n      const response = yield axios.get(url);\n      const pastSeasons = response.data.past;\n      let pastSeason = pastSeasons[pastSeasons.length - 1];\n\n      if (!pastSeason) {\n        pastSeason = {\n          season_name: \"N/A\",\n          total_points: \"N/A\",\n          rank: \"N/A\"\n        };\n      }\n\n      const thisSeason = response.data.current;\n      let pointsOnBench = 0;\n      let totalTransfers = 0;\n      thisSeason.map(gameweek => {\n        totalTransfers += gameweek.event_transfers;\n        pointsOnBench += gameweek.points_on_bench;\n        return 0;\n      });\n      playerData.push({\n        id: playerId,\n        pastSeason: pastSeason,\n        pointsOnBench: pointsOnBench,\n        totalTransfers: totalTransfers\n      });\n    } catch (error) {\n      yield put(actions.getPlayerDataFail(error));\n    }\n  }\n\n  yield put(actions.getPlayerDataSuccess(playerData));\n}","map":{"version":3,"sources":["/Users/nilsgoksor/Documents/Programming/React/JayLeagueFantasy/src/store/sagas/playerData.js"],"names":["put","actions","axios","playerDataSaga","action","getPlayerDataInit","playerData","playerId","playerIds","url","response","get","pastSeasons","data","past","pastSeason","length","season_name","total_points","rank","thisSeason","current","pointsOnBench","totalTransfers","map","gameweek","event_transfers","points_on_bench","push","id","error","getPlayerDataFail","getPlayerDataSuccess"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AACtC,QAAMJ,GAAG,CAACC,OAAO,CAACI,iBAAR,EAAD,CAAT;AAEA,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,MAAMC,QAAX,IAAuBH,MAAM,CAACI,SAA9B,EAAyC;AACvC,UAAMC,GAAG,GAAG,gBAAgBF,QAAhB,GAA2B,WAAvC;;AACA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUF,GAAV,CAAvB;AAEA,YAAMG,WAAW,GAAGF,QAAQ,CAACG,IAAT,CAAcC,IAAlC;AACA,UAAIC,UAAU,GAAGH,WAAW,CAACA,WAAW,CAACI,MAAZ,GAAqB,CAAtB,CAA5B;;AACA,UAAI,CAACD,UAAL,EAAiB;AACfA,QAAAA,UAAU,GAAG;AAAEE,UAAAA,WAAW,EAAE,KAAf;AAAsBC,UAAAA,YAAY,EAAE,KAApC;AAA2CC,UAAAA,IAAI,EAAE;AAAjD,SAAb;AACD;;AAED,YAAMC,UAAU,GAAGV,QAAQ,CAACG,IAAT,CAAcQ,OAAjC;AACA,UAAIC,aAAa,GAAG,CAApB;AACA,UAAIC,cAAc,GAAG,CAArB;AACAH,MAAAA,UAAU,CAACI,GAAX,CAAeC,QAAQ,IAAI;AACzBF,QAAAA,cAAc,IAAIE,QAAQ,CAACC,eAA3B;AACAJ,QAAAA,aAAa,IAAIG,QAAQ,CAACE,eAA1B;AACA,eAAO,CAAP;AACD,OAJD;AAMArB,MAAAA,UAAU,CAACsB,IAAX,CAAgB;AACdC,QAAAA,EAAE,EAAEtB,QADU;AAEdQ,QAAAA,UAAU,EAAEA,UAFE;AAGdO,QAAAA,aAAa,EAAEA,aAHD;AAIdC,QAAAA,cAAc,EAAEA;AAJF,OAAhB;AAMD,KAxBD,CAwBE,OAAOO,KAAP,EAAc;AACd,YAAM9B,GAAG,CAACC,OAAO,CAAC8B,iBAAR,CAA0BD,KAA1B,CAAD,CAAT;AACD;AACF;;AACD,QAAM9B,GAAG,CAACC,OAAO,CAAC+B,oBAAR,CAA6B1B,UAA7B,CAAD,CAAT;AACD","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index\";\nimport axios from \"../../axios-fantasy\";\n\nexport function* playerDataSaga(action) {\n  yield put(actions.getPlayerDataInit());\n\n  let playerData = [];\n  for (const playerId of action.playerIds) {\n    const url = \"/api/entry/\" + playerId + \"/history/\";\n    try {\n      const response = yield axios.get(url);\n\n      const pastSeasons = response.data.past;\n      let pastSeason = pastSeasons[pastSeasons.length - 1];\n      if (!pastSeason) {\n        pastSeason = { season_name: \"N/A\", total_points: \"N/A\", rank: \"N/A\" };\n      }\n\n      const thisSeason = response.data.current;\n      let pointsOnBench = 0;\n      let totalTransfers = 0;\n      thisSeason.map(gameweek => {\n        totalTransfers += gameweek.event_transfers;\n        pointsOnBench += gameweek.points_on_bench;\n        return 0;\n      });\n\n      playerData.push({\n        id: playerId,\n        pastSeason: pastSeason,\n        pointsOnBench: pointsOnBench,\n        totalTransfers: totalTransfers\n      });\n    } catch (error) {\n      yield put(actions.getPlayerDataFail(error));\n    }\n  }\n  yield put(actions.getPlayerDataSuccess(playerData));\n}\n"]},"metadata":{},"sourceType":"module"}